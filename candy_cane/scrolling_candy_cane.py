#!/usr/bin/env python3

CANDY_CANE_RED = (236, 15, 15)
CANDY_CANE_GREEN = (39, 126, 98)
CANDY_CANE_WHITE = (244, 244, 244)

CANDY_CANE_PIXELS_1 = [
    [CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE,
     CANDY_CANE_GREEN, CANDY_CANE_RED],
    [CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE,
     CANDY_CANE_GREEN, CANDY_CANE_RED],
    [CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE,
     CANDY_CANE_GREEN, CANDY_CANE_RED],
    [CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE,
     CANDY_CANE_GREEN, CANDY_CANE_RED],
]

CANDY_CANE_PIXELS_2 = [
    [CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED,
     CANDY_CANE_WHITE, CANDY_CANE_GREEN],
    [CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED,
     CANDY_CANE_WHITE, CANDY_CANE_GREEN],
    [CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED,
     CANDY_CANE_WHITE, CANDY_CANE_GREEN],
    [CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED,
     CANDY_CANE_WHITE, CANDY_CANE_GREEN],
]

CANDY_CANE_PIXELS_3 = [
    [CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN,
     CANDY_CANE_RED, CANDY_CANE_WHITE],
    [CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN,
     CANDY_CANE_RED, CANDY_CANE_WHITE],
    [CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN,
     CANDY_CANE_RED, CANDY_CANE_WHITE],
    [CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN, CANDY_CANE_RED, CANDY_CANE_WHITE, CANDY_CANE_GREEN,
     CANDY_CANE_RED, CANDY_CANE_WHITE],
]

CANDY_CANE_PIXELS_SEQUENCE = [
    CANDY_CANE_PIXELS_1,
    CANDY_CANE_PIXELS_2,
    CANDY_CANE_PIXELS_3,
]

from time import sleep

HAS_UNICORNHAT = True

try:
    import unicornhat
except ImportError:
    HAS_UNICORNHAT = False


def stop():
    """
    Signal handler to turn off the Unicorn pHAT
    """
    print('Turning off Unicorn pHAT')
    if HAS_UNICORNHAT:
        unicornhat.off()


if __name__ == '__main__':
    print('Press Ctrl-C to exit the program')
    if HAS_UNICORNHAT:
        unicornhat.set_layout(unicornhat.PHAT_VERTICAL)
        unicornhat.brightness(0.4)

    try:
        while True:
            for pixels in CANDY_CANE_PIXELS_SEQUENCE:
                if HAS_UNICORNHAT:
                    unicornhat.set_pixels(pixels)
                    unicornhat.show()
                    sleep(0.05)

    except KeyboardInterrupt:
        stop()
